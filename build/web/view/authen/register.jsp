<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ƒêƒÉng k√Ω - Qu·∫£n L√Ω Kho H√†ng</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'JetBrains Mono', monospace;
      background-color: #f1f3f5;
    }
    .register-box {
      max-width: 500px;
      margin: 50px auto;
      padding: 30px;
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .alert {
      margin-bottom: 20px;
    }
  </style>
</head>
<body>

<div class="register-box">
  <h3 class="text-center mb-4">üì¶ ƒêƒÉng K√Ω T√†i Kho·∫£n</h3>

  <c:if test="${not empty sessionScope.errorMessage}">
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      ${sessionScope.errorMessage}
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
    <c:remove var="errorMessage" scope="session"/>
  </c:if>

  <form action="${pageContext.request.contextPath}/register" method="post">
    <div class="mb-3">
      <label class="form-label">T√™n ƒëƒÉng nh·∫≠p</label>
      <input type="text" name="username" class="form-control" placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p" required>
      <div class="form-text">T·ª´ 3-50 k√Ω t·ª±, kh√¥ng c√≥ kho·∫£ng tr·∫Øng</div>
    </div>

    <div class="mb-3">
      <label class="form-label">H·ªç v√† t√™n</label>
      <input type="text" name="fullName" class="form-control" placeholder="Nh·∫≠p h·ªç v√† t√™n ƒë·∫ßy ƒë·ªß" required>
    </div>

    <div class="mb-3">
      <label class="form-label">Email</label>
      <input type="email" name="email" class="form-control" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ email" required>
      <div class="form-text">Email s·∫Ω ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ kh√¥i ph·ª•c m·∫≠t kh·∫©u</div>
    </div>
    
    <div class="mb-3">
      <label class="form-label">Phone</label>
      <input type="tel" name="phone" class="form-control"  placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
             maxlength="10" pattern="\d{10}" inputmode="numeric" required
             oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 10);" >
    </div>

    <div class="mb-3">
      <label class="form-label">Vai tr√≤</label>
      <select name="role" class="form-select" required>
        <option value="">-- Ch·ªçn vai tr√≤ --</option>
        <option value="warehouse_staff">Nh√¢n vi√™n kho</option>
        <option value="sales_staff">Nh√¢n vi√™n b√°n h√†ng</option>
        <option value="purchasing_staff">Nh√¢n vi√™n mua h√†ng</option>
        <option value="admin">Qu·∫£n tr·ªã vi√™n</option>
      </select>
    </div>

    <div class="mb-3">
      <label class="form-label">M·∫≠t kh·∫©u</label>
      <input type="password" name="password" class="form-control" placeholder="Nh·∫≠p m·∫≠t kh·∫©u" required>
      <div class="form-text">√çt nh·∫•t 6 k√Ω t·ª±, bao g·ªìm ch·ªØ v√† s·ªë</div>
    </div>

    <div class="mb-3">
      <label class="form-label">X√°c nh·∫≠n m·∫≠t kh·∫©u</label>
      <input type="password" name="confirmPassword" class="form-control" placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" required>
    </div>

    <button type="submit" class="btn btn-success w-100" id="submitBtn">ƒêƒÉng k√Ω</button>
    <div class="text-center mt-3">
      <a href="${pageContext.request.contextPath}/login">ƒê√£ c√≥ t√†i kho·∫£n? ƒêƒÉng nh·∫≠p</a>
    </div>
  </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const emailInput = document.querySelector('input[name="email"]');
    const passwordInput = document.querySelector('input[name="password"]');
    const confirmPasswordInput = document.querySelector('input[name="confirmPassword"]');
    const submitBtn = document.getElementById('submitBtn');

    // Email validation
    emailInput.addEventListener('blur', function() {
        const email = this.value.trim();
        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

        if (email && !emailRegex.test(email)) {
            this.classList.add('is-invalid');
            if (!this.nextElementSibling || !this.nextElementSibling.classList.contains('invalid-feedback')) {
                const feedback = document.createElement('div');
                feedback.className = 'invalid-feedback';
                feedback.textContent = 'ƒê·ªãnh d·∫°ng email kh√¥ng h·ª£p l·ªá';
                this.parentNode.appendChild(feedback);
            }
        } else {
            this.classList.remove('is-invalid');
            const feedback = this.parentNode.querySelector('.invalid-feedback');
            if (feedback) feedback.remove();
        }
    });

    // Password confirmation validation
    function validatePasswordMatch() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        if (confirmPassword && password !== confirmPassword) {
            confirmPasswordInput.classList.add('is-invalid');
            if (!confirmPasswordInput.nextElementSibling || !confirmPasswordInput.nextElementSibling.classList.contains('invalid-feedback')) {
                const feedback = document.createElement('div');
                feedback.className = 'invalid-feedback';
                feedback.textContent = 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp';
                confirmPasswordInput.parentNode.appendChild(feedback);
            }
        } else {
            confirmPasswordInput.classList.remove('is-invalid');
            const feedback = confirmPasswordInput.parentNode.querySelector('.invalid-feedback');
            if (feedback) feedback.remove();
        }
    }

    passwordInput.addEventListener('input', validatePasswordMatch);
    confirmPasswordInput.addEventListener('input', validatePasswordMatch);

    // Form submission validation
    form.addEventListener('submit', function(e) {
        const email = emailInput.value.trim();
        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

        if (!emailRegex.test(email)) {
            e.preventDefault();
            emailInput.focus();
            alert('Vui l√≤ng nh·∫≠p email h·ª£p l·ªá');
            return;
        }

        if (passwordInput.value !== confirmPasswordInput.value) {
            e.preventDefault();
            confirmPasswordInput.focus();
            alert('M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp');
            return;
        }
    });
});
</script>
</body>
</html>
